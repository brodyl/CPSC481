@inherits LayoutComponentBase

@inject NavigationManager NavigationManager
@inject MyApplication.Pages.MenuBrowser MenuBrowserService
@inject MyApplication.Shared.OrderItems OrderItemsService
@inject StateContainer StateContainer
@inject IDialogService DialogService

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<link href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" rel="stylesheet">

<MudLayout style="background-color:#1c1f22;">
    <div style="display: flex; justify-content: flex-start;">
    <MudIconButton @onclick="HelpDialog" Icon="@Icons.Material.Filled.Help" Variant="Variant.Outlined" Color="Color.Warning" Size="Size.Large" />
    <MudTabs Elevation="4" Rounded="true" Centered="true" Color="@Color.Warning" style="color: #ffffff; position: sticky; top: 0; z-index: 100; width: 100%;">
        <MudTabPanel @onclick="@(() => NavigationManager.NavigateTo($"/fetchdata", false))" Text="Features" Icon="fas fa-grin-stars" />
        <MudTabPanel @onclick="@(() => NavigationManager.NavigateTo($"/browse/burgers", false))" Text="Burgers" Icon="fas fa-hamburger" />
        <MudTabPanel @onclick="@(() => NavigationManager.NavigateTo($"/browse/sides", false))" Text="Sides" Icon="fas fa-drumstick-bite" />
        <MudTabPanel @onclick="@(() => NavigationManager.NavigateTo($"/browse/drinks", false))" Text="Drinks" Icon="fas fa-glass-whiskey" />
        <MudTabPanel @onclick="@(() => NavigationManager.NavigateTo($"/browse/kids", false))" Text="Kids Meal" Icon="fas fa-child" />
        <MudTabPanel @onclick="@(() => NavigationManager.NavigateTo($"/browse/value", false))" Text="Value Deals" Icon="fas fa-piggy-bank" />
    </MudTabs>
    </div>

@if (open) {
    <MudDrawer @bind-Open="@open" Elevation="1" Variant="@DrawerVariant.Persistent" Color="Color.Primary" Anchor="@_anchor" DisableOverlay="true" Style="left: 0; top:auto; bottom: 0; width: 100%; height: auto">
        <MudContainer Class="pa-0 ma-0 d-flex justify-start align-center" Style="width: 100%;" Row="true">
            <MudButton OnClick="@restartOrder" Color="Color.Error" Variant="Variant.Filled" Style="width: 20%;" Margin="Margin.Normal">
                Restart Order
            </MudButton>
            <MudButton  OnClick="@(() => OpenDrawer(Anchor.Bottom))" Color="Color.Primary" Variant="Variant.Filled" Style="width: 60%;">
                <MudIcon Icon="@Icons.Material.Filled.KeyboardDoubleArrowDown" Title="Add" />
                    &emsp; &emsp; Hide Order &emsp; &emsp;
                <MudIcon Icon="@Icons.Material.Filled.KeyboardDoubleArrowDown" Title="Add" />
            </MudButton>
            <MudButton OnClick="@(() => OpenDrawer(Anchor.Bottom))" Color="Color.Primary" Variant="Variant.Filled" Style="float: right; width: 20%; text-align: right;">
                &emsp;
            </MudButton>
        </MudContainer>
        <OrderItems />
    </MudDrawer>
} else {
    <MudDrawer @bind-Open="@open" Elevation="1" Variant="@DrawerVariant.Mini" Color="Color.Primary" Anchor="@_anchor" DisableOverlay="true" Style="left: 0; top:auto; bottom: 0; width: 100%; height: auto">
        <MudContainer Class="pa-0 ma-0 d-flex justify-start align-center" Style="width: 100%;" Row="true">
            <MudButton OnClick="@restartOrder" Color="Color.Error" Variant="Variant.Filled" Style="width: 20%;" Margin="Margin.Normal">
                Restart Order
            </MudButton>
            <MudButton  OnClick="@(() => OpenDrawer(Anchor.Bottom))" Color="Color.Primary" Variant="Variant.Filled" Style="width: 60%;">
                <MudIcon Icon="@Icons.Material.Filled.KeyboardDoubleArrowUp" Title="Add" />
                    &emsp; &emsp; View Order &emsp; &emsp;
                <MudIcon Icon="@Icons.Material.Filled.KeyboardDoubleArrowUp" Title="Add" />
            </MudButton>
            <MudButton  @onclick="PaymentPrompt" Color="Color.Tertiary" Variant="Variant.Filled" Style="float: right; width: 20%; text-align: right;">
                Pay Now &emsp; &emsp; $@string.Format("{0:0.00}", GetGrandTotal())
            </MudButton>
        </MudContainer>
    </MudDrawer> 
}
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="pt-0">
            @Body
            <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
            <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
            <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
            <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
        </MudContainer>
    </MudMainContent>
</MudLayout>



@code {

    bool open = false;
    Anchor _anchor;

    void OpenDrawer(Anchor anchor) {
        open = !open;
        _anchor = anchor;
    }

    private void PaymentPrompt()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        DialogService.Show<PaymentPrompt>("Review your order and choose payment options:", new DialogParameters
        {
            { "OrderItems", StateContainer._items },
            { "GrandTotal", GetGrandTotal() }
        }, options);
    }

    private decimal GetGrandTotal()
    {
        return @StateContainer._items.Sum(item => item.Quantity * item.menuItem.price);
    }

    private async Task restartOrder() {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        var parameters = new DialogParameters();        
        parameters.Add("ContentText", "Are you sure you want to Restart the order? All items will be removed if you do.");
        parameters.Add("ButtonText", "Yes");
        var dialogResult = DialogService.Show <DialogConfirm> ("Confirm", parameters);
        var result = await dialogResult.Result;
        if (!result.Cancelled && bool.TryParse(result.Data.ToString(), out bool resultbool)) {
            StateContainer.restartOrder();
            NavigationManager.NavigateTo("/");
        }
    }

    private void HelpDialog() {
        
    }
}
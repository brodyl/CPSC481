@page "/Customize"
@inject NavigationManager NavigationManager
@inject StateContainer StateContainer
@inject OrderItems OrderItems
@inject IDialogService DialogService
@inject ISnackbar Snackbar

<style>
  table {
      border-collapse: collapse;

  table-layout: fixed;
  width: 100%;
}
  th {
  border-spacing: 0;
  padding: 10px;
  border: 0;
  margin: 0;
}

th:first-child {
  width: 33%;
}

th:nth-child(2) {
  width: 34%;
}

th:last-child {
  width: 33%;
}

td{
  background-color: #DDFFBB;
  margin-top: 10px;
}
</style>



<link href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" rel="stylesheet">

<div style="margin:auto; text-align:center; width:80%">
  <div>
    <MudImage Elevation="16" style="width: 60%; border-radius: 100px; border: 15px solid #7e6fff;" src="@StateContainer.itemToCustomize.imageLg" alt="" />
  </div>
  <div style="text-align: left;background-color:rgb(255, 255, 255); border-radius: 10px; border: 2px solid #7e6fff; margin-bottom: 30px">
    <p>
      <MudSimpleTable>
        <thead>
          <tr>
            <th colspan="2"><b><h2>Description:</h2></b> @StateContainer.itemToCustomize.description <br /><br /></th>
          </tr>
          <tr>
            <th><b><h2>Calories: </h2></b>@StateContainer.itemToCustomize.Calories <br></th>
            <th style="text-align: right; width: 50%;">
              <MudIconButton  @onclick="DialogDescription" Variant="Variant.Filled" Icon="@Icons.Material.Filled.Info" Color="Color.Primary" Size="Size.Small" /> See Full Description
              @* <MudButton @onclick="DialogDescription" Style="margin-top:5%; margin-left: 50px; background-color: #EABC45; width: auto; height: 50px; font-size: large; color: black">Full description</MudButton> *@
            </th>
          </tr>
        </thead>
      </MudSimpleTable>
    </p>
  </div>

  <div style="text-align: center;width:100%; max-height:400px;overflow-y:scroll;">
  <!--<div style="text-align: center;width:100%; max-height:400px;overflow-y:scroll; border: 2px solid black;">-->

@if (@StateContainer.itemToCustomize.category == "burger")
{
    <table id="Ingredients-table" class="table" style="border-collapse: collapse; width:100%;">
      <!--
      <thead>

        <tr>
          <th style="padding: 10px; border: 0;margin:0;width:33%">Ingredients</th>
          <th style="padding: 10px; border: 0;margin:0;width:34%">Quantity</th>
          <th style="padding: 10px; border: 0;margin:0;width:33%">Action</th>
        </tr>


      </thead>
      -->
      <tbody>
        @foreach (var Ingredient in Ingredients){
    <tr style="border: 5px solid #ffa800ff;">
        <!--
        <td style="padding: 10px; border: 1px solid black; width:33%">@Ingredient.Name</td>
        <td style="padding: 10px; border: 1px solid black;width:33%">
            <button class="minus-btn" style="padding: 5px; @(Ingredient.IsDisabled ? "display:none;" : "")" @onclick="() => DecreaseQuantity(Ingredient)">-</button>
            <span class="quantity" style="padding: 0 5px;">@(Ingredient.IsDisabled ? "Removed" : Ingredient.Quantity)</span>
            <button class="plus-btn" style="padding: 5px; @(Ingredient.IsDisabled ? "display:none;" : "")" @onclick="() => IncreaseQuantity(Ingredient)">+</button>
        </td>
        -->
        <td style="width:33%; @(Ingredient.IsDisabled ? "opacity: 0.5;" : "")"><MudText Typo="Typo.h6" Align="Align.Center" style="color:#ffffff;">@Ingredient.Name</MudText></td>

        <td style="padding: 10px; width:33%; @(Ingredient.IsDisabled ? "opacity: 0.5;" : "")">
            <!--<button class="minus-btn" style="padding: 5px; @(Ingredient.IsDisabled ? "display:none;" : "")" @onclick="() => DecreaseQuantity(Ingredient)">-</button>-->
            <MudIconButton Variant="Variant.Filled" Color="Color.Warning" Icon="@Icons.Material.Filled.Remove" Size="Size.Medium" class="minus-btn" @onclick="() => DecreaseQuantity(Ingredient)"></MudIconButton>
            <span class="quantity mx-5" style="padding: 0 5px; color:#ffffff; font-size: 20px;"><b>@(Ingredient.IsDisabled ? "Removed" : Ingredient.Quantity)</b></span>
            <!--<button class="plus-btn" style="padding: 5px; @(Ingredient.IsDisabled ? "display:none;" : "")" @onclick="() => IncreaseQuantity(Ingredient)">+</button>-->
            <MudIconButton Variant="Variant.Filled" Color="Color.Warning" Icon="@Icons.Material.Filled.Add" Size="Size.Medium" class="plus-btn" @onclick="() => IncreaseQuantity(Ingredient)"></MudIconButton>
        </td>

        <td style="padding: 10px; width:33%">
            @if (Ingredient.IsDisabled)
            {
                <!--<button class="add-btn" style="padding: 5px;" @onclick="() => AddIngredient(Ingredient)">Add</button>-->
                <MudButton Variant="Variant.Filled" Color="Color.Tertiary" class="add-btn" style="padding: 5px;" @onclick="() => AddIngredient(Ingredient)">Add</MudButton>
            }
            else
            {
                <!--<button class="delete-btn" style="padding: 5px;" @onclick="() => DeleteIngredient(Ingredient)">Delete</button>-->
                <MudButton Variant="Variant.Filled" Color="Color.Error" class="delete-btn" style="padding: 5px;" @onclick="() => DeleteIngredient(Ingredient)">Delete</MudButton>
            }
        </td>
    </tr>
}
      </tbody>
    </table>
} else if (@StateContainer.itemToCustomize.category == "drinks"){






}
  </div>

  <div style="position: sticky; bottom: 4rem; align-self: flex-end;">
    <!--
    <MudButton @onclick="() => launchComboPage()" Style="margin-top:5%; margin-right: 50px; width: auto; height: 50px; font-size: large; color: black" Color="Color.Warning">Make it a Combo</MudButton>
    <MudButton OnClick="AddMenuItemToOrder" Style="margin-top:5%; margin-left: 50px; width: auto; height: 50px; font-size: large; color: black" Color="Color.Warning">Add to Order</MudButton>
    -->
    <MudButton @onclick="() => launchComboPage()" Variant="Variant.Filled" Color="Color.Warning" Class="mx-5 my-10" Size="Size.Large"><b></b>Make it a Combo</MudButton>
    <MudButton Variant="Variant.Filled" Color="Color.Warning" Class="mx-5 my-10" Size="Size.Large" @onclick="@(() => {
        Snackbar.Add("This item has been added to your order", Severity.Success);
        AddMenuItemToOrder();
      })">
    Add to Order</MudButton>
  </div>
</div>

@code {
  [Parameter]
  public int ID { get; set; }

  public List<Ingredient>? Ingredients => StateContainer.itemToCustomize.Ingredients;

  // Method to decrease the quantity of an Ingredient
  private void DecreaseQuantity(Ingredient Ingredient)
  {
    if (Ingredient.Quantity == "Extra")
    {
      Ingredient.Quantity = "Regular";
    }
    else if (Ingredient.Quantity == "Regular")
    {
      Ingredient.Quantity = "Less";
    }
  }

  // Method to increase the quantity of an Ingredient
  private void IncreaseQuantity(Ingredient Ingredient)
  {
    if (Ingredient.Quantity == "Less")
    {
      Ingredient.Quantity = "Regular";
    }
    else if (Ingredient.Quantity == "Regular")
    {
      Ingredient.Quantity = "Extra";
    }
  }

  // Method to delete an Ingredient
  private void DeleteIngredient(Ingredient Ingredient)
  {
    Ingredient.IsDisabled = true;
  }

  // Method to add an Ingredient
  private void AddIngredient(Ingredient Ingredient)
  {
    Ingredient.IsDisabled = false;
  }

  private void launchComboPage() {
    var options = new DialogOptions { DisableBackdropClick = true, MaxWidth = MaxWidth.Large, FullWidth = true };
    DialogService.Show<Dialog>("", options);
  }

  private void AddMenuItemToOrder() {
    StateContainer.AddMenuItemToOrder();
    StateHasChanged();
  }

    private async Task DialogDescription()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        DialogService.Show<DialogDescription>("", options);
    }


}

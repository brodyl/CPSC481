@page "/Customize"
@inject NavigationManager NavigationManager
@inject StateContainer StateContainer
@inject IDialogService DialogService

<link href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" rel="stylesheet">

<div style="margin:auto; text-align:center; width:80%">
  <div>
    <MudImage Elevation="16" style="width: 60%; border-radius: 100px; border: 10px solid #7e6fff;" src="@StateContainer.itemToCustomize.imageLg" alt="" />
  </div>
  <div style="text-align: left;background-color:rgb(255, 255, 255); border-radius: 10px; border: 2px solid #7e6fff">
    <p>
      <MudSimpleTable>
        <thead>
          <tr>
            <th colspan="2"><b><h2>Description:</h2></b> @StateContainer.itemToCustomize.description <br /><br /></th>
          </tr>
          <tr>
            <th><b><h2>Calories: </h2></b>@StateContainer.itemToCustomize.Calories <br></th>
            <th style="text-align: right; width: 50%;">
              <MudIconButton  @onclick="DialogDescription" Variant="Variant.Filled" Icon="@Icons.Material.Filled.Info" Color="Color.Primary" Size="Size.Small" /> See Full Description
              @* <MudButton @onclick="DialogDescription" Style="margin-top:5%; margin-left: 50px; background-color: #EABC45; width: auto; height: 50px; font-size: large; color: black">Full description</MudButton> *@
            </th>
          </tr>
        </thead>
      </MudSimpleTable>
    </p>
  </div>

  <div style="text-align: center;width:100%; max-height:400px;overflow-y:scroll; border: 2px solid black;">
    <table id="Ingredients-table" class="table" style="border-collapse: none ;width:100%;">
      <thead>
        <tr>
          <th style="padding: 10px; border: 1px solid black;">Ingredients</th>
          <th style="padding: 10px; border: 1px solid black;">Quantity</th>
          <th style="padding: 10px; border: 1px solid black;">Action</th>
        </tr>
      </thead>
      <tbody>
        @foreach (var Ingredient in Ingredients){
    <tr style="@(Ingredient.IsDisabled ? "opacity: 0.5;" : "")">
        <td style="padding: 10px; border: 1px solid black; width:33%">@Ingredient.Name</td>
        <td style="padding: 10px; border: 1px solid black;width:33%">
            <button class="minus-btn" style="padding: 5px; @(Ingredient.IsDisabled ? "display:none;" : "")" @onclick="() => DecreaseQuantity(Ingredient)">-</button>
            <span class="quantity" style="padding: 0 5px;">@(Ingredient.IsDisabled ? "Removed" : Ingredient.Quantity)</span>
            <button class="plus-btn" style="padding: 5px; @(Ingredient.IsDisabled ? "display:none;" : "")" @onclick="() => IncreaseQuantity(Ingredient)">+</button>
        </td>
        <td style="padding: 10px; border: 1px solid black;width:33%">
            @if (Ingredient.IsDisabled)
            {
                <button class="add-btn" style="padding: 5px;" @onclick="() => AddIngredient(Ingredient)">Add</button>
            }
            else
            {
                <button class="delete-btn" style="padding: 5px;" @onclick="() => DeleteIngredient(Ingredient)">Delete</button>
            }
        </td>
    </tr>
}
      </tbody>
    </table>
  </div>

<MudButton @onclick="() => launchComboPage()" Style="margin-top:5%; margin-right: 50px; background-color: #EABC45; width: auto; height: 50px; font-size: large; color: black">Make it a Combo</MudButton>
<MudButton OnClick="@StateContainer.AddMenuItemToOrder" Style="margin-top:5%; margin-left: 50px; background-color: #EABC45; width: auto; height: 50px; font-size: large; color: black">Add to Order</MudButton>
</div>

@code {
  [Parameter]
  public int ID { get; set; }

  public List<Ingredient>? Ingredients => StateContainer.itemToCustomize.Ingredients;

  // Method to decrease the quantity of an Ingredient
  private void DecreaseQuantity(Ingredient Ingredient)
  {
    if (Ingredient.Quantity == "Extra")
    {
      Ingredient.Quantity = "Regular";
    }
    else if (Ingredient.Quantity == "Regular")
    {
      Ingredient.Quantity = "Less";
    }
  }

  // Method to increase the quantity of an Ingredient
  private void IncreaseQuantity(Ingredient Ingredient)
  {
    if (Ingredient.Quantity == "Less")
    {
      Ingredient.Quantity = "Regular";
    }
    else if (Ingredient.Quantity == "Regular")
    {
      Ingredient.Quantity = "Extra";
    }
  }

  // Method to delete an Ingredient
  private void DeleteIngredient(Ingredient Ingredient)
  {
    Ingredient.IsDisabled = true;
  }

  // Method to add an Ingredient
  private void AddIngredient(Ingredient Ingredient)
  {
    Ingredient.IsDisabled = false;
  }

  private void launchComboPage() {
    var options = new DialogOptions { DisableBackdropClick = true, MaxWidth = MaxWidth.Large, FullWidth = true };
    DialogService.Show<Dialog>("", options);
  }

    private async Task DialogDescription()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        DialogService.Show<DialogDescription>("", options);
    }


}
